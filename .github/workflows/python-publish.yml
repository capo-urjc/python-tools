# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up PDM
      uses: pdm-project/setup-pdm@v4

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pdm install -G dev


    # Validate version tag
    - name: Validate and extract version from tag
      id: extract_version
      run: |
        TAG_NAME="${{ github.event.release.tag_name }}"
        if [[ ! "$TAG_NAME" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Tag name is not in the correct format (vX.X.X)."
          exit 1
        fi
        VERSION=${TAG_NAME#v} # Elimina la 'v' al inicio
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Extracted version: $VERSION"

    - name: Generate __version__.py
      run: |
        VERSION="${{ github.event.release.tag_name }}"
        echo "__version__ = '${VERSION#v}'" > src/capo_tools/__version__.py

      # Compiling the Python package
    - name: Build package
      run: |
        python -m pip install --upgrade build twine
        python -m build

    # Ensure Twine is installed
    - name: Install Twine
      run: pdm add --dev twine

    # Publish package to TestPyPI using Twine
    # Here we use my credentials
    - name: Publish package to TestPyPI
      env:

        TWINE_USERNAME: __token__  # TestPyPI user
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}  # TestPyPI password
      run: |
        twine upload --repository-url https://test.pypi.org/legacy/ --verbose dist/* # Upload the files to TestPyPI

