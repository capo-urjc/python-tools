# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up PDM
      uses: pdm-project/setup-pdm@v4

    # Install dependencies
    - name: Install dependencies
      run: |
         python -m pip install --upgrade pip
        
    



    # Compiling the Python package
    - name: Build package
      run: |
        python -m pip install --upgrade build twine
        python -m build

    # Ensure Twine is installed
    - name: Install Twine
      run: pdm add --dev twine

    # Publish package to TestPyPI using Twine
    # Here we use my credentials
    - name: Publish package to TestPyPI
      env:
        TWINE_USERNAME: '__token__'  # TestPyPI user
        TWINE_PASSWORD: 'pypi-AgENdGVzdC5weXBpLm9yZwIkOWJkYTg2NzAtZjI2Ni00NzM5LTk5ZjYtMDE5MGQ5Y2E0YzgwAAISWzEsWyJjYXBvLXRvb2xzIl1dAAIsWzIsWyJiMjVkOTQ0My01ODc5LTRiYWMtYTE3Yi1jNWVmZmUyYmFjNzYiXV0AAAYgulX7v0XPB2L-kf5bpRwCTqriIvyfuiGiYb3VI9zrOQ4'  # TestPyPI password
      run: |
        twine upload --repository-url https://test.pypi.org/legacy/ --verbose dist/* # Upload the files to TestPyPI