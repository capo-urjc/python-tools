{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenido a la Documentaci\u00f3n de python-tools \u00b6 Este proyecto realizado por capo-urjc es una herramienta escrita en Python que hace ... Esta documentaci\u00f3n est\u00e1 dise\u00f1ada para ayudarte a entender c\u00f3mo usar, configurar y desarrollar la herramienta. Contenido \u00b6 Introducci\u00f3n Instalaci\u00f3n Referencias de la API Introducci\u00f3n \u00b6 breve descripci\u00f3n del proyecto, sus objetivos y c\u00f3mo puede ayudar a los usuarios. Instalaci\u00f3n \u00b6 Para instalar el proyecto, puedes usar: ```bash pip install ...","title":"Home"},{"location":"#bienvenido-a-la-documentacion-de-python-tools","text":"Este proyecto realizado por capo-urjc es una herramienta escrita en Python que hace ... Esta documentaci\u00f3n est\u00e1 dise\u00f1ada para ayudarte a entender c\u00f3mo usar, configurar y desarrollar la herramienta.","title":"Bienvenido a la Documentaci\u00f3n de python-tools"},{"location":"#contenido","text":"Introducci\u00f3n Instalaci\u00f3n Referencias de la API","title":"Contenido"},{"location":"#introduccion","text":"breve descripci\u00f3n del proyecto, sus objetivos y c\u00f3mo puede ayudar a los usuarios.","title":"Introducci\u00f3n"},{"location":"#instalacion","text":"Para instalar el proyecto, puedes usar: ```bash pip install ...","title":"Instalaci\u00f3n"},{"location":"api/","text":"API Reference \u00b6","title":"API"},{"location":"api/#api-reference","text":"","title":"API Reference"},{"location":"manual_de_usuario/","text":"Manual de Usuario \u00b6 Este manual describe el funcionamiento de las tres acciones automatizadas disponibles en este proyecto. Cada acci\u00f3n est\u00e1 dise\u00f1ada para facilitar tareas clave como la gesti\u00f3n de dependencias, generaci\u00f3n de documentaci\u00f3n y despliegue de paquetes. 1. Instalar dependencias, ejecutar linting y tests \u00b6 Descripci\u00f3n \u00b6 Esta acci\u00f3n instala las dependencias del proyecto, ejecuta an\u00e1lisis de c\u00f3digo con flake8 y realiza los tests definidos en el proyecto. Se activa en los siguientes casos: - Cuando se hace un push a la rama main . - Cuando se crea un pull request . Proceso \u00b6 Instala todas las dependencias necesarias definidas en los archivos del proyecto. Ejecuta flake8 para asegurarse de que el c\u00f3digo cumple con las normas de estilo y calidad. Corre los tests definidos, asegur\u00e1ndose de que el proyecto es funcional y no contiene errores. Activaci\u00f3n \u00b6 Trigger: Push a main o Pull Request. 2. Generar documentaci\u00f3n autom\u00e1ticamente \u00b6 Descripci\u00f3n \u00b6 Esta acci\u00f3n genera la documentaci\u00f3n del proyecto combinando: - Los docstrings de los archivos ubicados en src/ . - Cualquier documentaci\u00f3n adicional definida manualmente en los archivos de la carpeta docs/ . El resultado es un sitio de documentaci\u00f3n actualizado autom\u00e1ticamente. Proceso \u00b6 Escanea los archivos en src/ y procesa los docstrings . Incluye la documentaci\u00f3n manual definida en docs/ . Genera un sitio est\u00e1tico que puede ser desplegado para consulta. Activaci\u00f3n \u00b6 Trigger: Push a main . 3. Crear y publicar paquete en Test PyPI \u00b6 Descripci\u00f3n \u00b6 Esta acci\u00f3n automatiza la creaci\u00f3n y despliegue de un paquete Python en Test PyPI . El paquete incluye la etiqueta asociada al nombre del release publicado. Proceso \u00b6 Instala las dependencias necesarias para empaquetar el proyecto. Crea el paquete del proyecto usando herramientas como setuptools o pdm . Publica el paquete en Test PyPI con el nombre y la versi\u00f3n obtenidos del release. Activaci\u00f3n \u00b6 Trigger: Publicaci\u00f3n de un release. Notas \u00b6 El nombre del release se utiliza como etiqueta del paquete en Test PyPI. Aseg\u00farate de que las credenciales para Test PyPI est\u00e1n configuradas en los secrets del repositorio. Preguntas Frecuentes (FAQ) \u00b6 \u00bfQu\u00e9 sucede si una acci\u00f3n falla? \u00b6 Si alguna acci\u00f3n falla, revisa los logs generados en GitHub Actions para identificar el problema. Los errores comunes incluyen: - Dependencias faltantes. - Estilo de c\u00f3digo incorrecto (flake8). - Tests fallidos. \u00bfC\u00f3mo puedo personalizar estas acciones? \u00b6 Edita el archivo workflow.yml correspondiente en el directorio .github/workflows/ . Aseg\u00farate de seguir las normas de sintaxis de YAML. \u00bfD\u00f3nde puedo ver la documentaci\u00f3n generada? \u00b6 La documentaci\u00f3n generada se encuentra en la carpeta site/ , que puede ser desplegada en GitHub Pages o cualquier servidor est\u00e1tico. \u00a1Gracias por usar estas acciones automatizadas! Si necesitas m\u00e1s ayuda, no dudes en consultar con el equipo o revisar la configuraci\u00f3n de los workflows.","title":"Manual de usuario"},{"location":"manual_de_usuario/#manual-de-usuario","text":"Este manual describe el funcionamiento de las tres acciones automatizadas disponibles en este proyecto. Cada acci\u00f3n est\u00e1 dise\u00f1ada para facilitar tareas clave como la gesti\u00f3n de dependencias, generaci\u00f3n de documentaci\u00f3n y despliegue de paquetes.","title":"Manual de Usuario"},{"location":"manual_de_usuario/#1-instalar-dependencias-ejecutar-linting-y-tests","text":"","title":"1. Instalar dependencias, ejecutar linting y tests"},{"location":"manual_de_usuario/#descripcion","text":"Esta acci\u00f3n instala las dependencias del proyecto, ejecuta an\u00e1lisis de c\u00f3digo con flake8 y realiza los tests definidos en el proyecto. Se activa en los siguientes casos: - Cuando se hace un push a la rama main . - Cuando se crea un pull request .","title":"Descripci\u00f3n"},{"location":"manual_de_usuario/#proceso","text":"Instala todas las dependencias necesarias definidas en los archivos del proyecto. Ejecuta flake8 para asegurarse de que el c\u00f3digo cumple con las normas de estilo y calidad. Corre los tests definidos, asegur\u00e1ndose de que el proyecto es funcional y no contiene errores.","title":"Proceso"},{"location":"manual_de_usuario/#activacion","text":"Trigger: Push a main o Pull Request.","title":"Activaci\u00f3n"},{"location":"manual_de_usuario/#2-generar-documentacion-automaticamente","text":"","title":"2. Generar documentaci\u00f3n autom\u00e1ticamente"},{"location":"manual_de_usuario/#descripcion_1","text":"Esta acci\u00f3n genera la documentaci\u00f3n del proyecto combinando: - Los docstrings de los archivos ubicados en src/ . - Cualquier documentaci\u00f3n adicional definida manualmente en los archivos de la carpeta docs/ . El resultado es un sitio de documentaci\u00f3n actualizado autom\u00e1ticamente.","title":"Descripci\u00f3n"},{"location":"manual_de_usuario/#proceso_1","text":"Escanea los archivos en src/ y procesa los docstrings . Incluye la documentaci\u00f3n manual definida en docs/ . Genera un sitio est\u00e1tico que puede ser desplegado para consulta.","title":"Proceso"},{"location":"manual_de_usuario/#activacion_1","text":"Trigger: Push a main .","title":"Activaci\u00f3n"},{"location":"manual_de_usuario/#3-crear-y-publicar-paquete-en-test-pypi","text":"","title":"3. Crear y publicar paquete en Test PyPI"},{"location":"manual_de_usuario/#descripcion_2","text":"Esta acci\u00f3n automatiza la creaci\u00f3n y despliegue de un paquete Python en Test PyPI . El paquete incluye la etiqueta asociada al nombre del release publicado.","title":"Descripci\u00f3n"},{"location":"manual_de_usuario/#proceso_2","text":"Instala las dependencias necesarias para empaquetar el proyecto. Crea el paquete del proyecto usando herramientas como setuptools o pdm . Publica el paquete en Test PyPI con el nombre y la versi\u00f3n obtenidos del release.","title":"Proceso"},{"location":"manual_de_usuario/#activacion_2","text":"Trigger: Publicaci\u00f3n de un release.","title":"Activaci\u00f3n"},{"location":"manual_de_usuario/#notas","text":"El nombre del release se utiliza como etiqueta del paquete en Test PyPI. Aseg\u00farate de que las credenciales para Test PyPI est\u00e1n configuradas en los secrets del repositorio.","title":"Notas"},{"location":"manual_de_usuario/#preguntas-frecuentes-faq","text":"","title":"Preguntas Frecuentes (FAQ)"},{"location":"manual_de_usuario/#que-sucede-si-una-accion-falla","text":"Si alguna acci\u00f3n falla, revisa los logs generados en GitHub Actions para identificar el problema. Los errores comunes incluyen: - Dependencias faltantes. - Estilo de c\u00f3digo incorrecto (flake8). - Tests fallidos.","title":"\u00bfQu\u00e9 sucede si una acci\u00f3n falla?"},{"location":"manual_de_usuario/#como-puedo-personalizar-estas-acciones","text":"Edita el archivo workflow.yml correspondiente en el directorio .github/workflows/ . Aseg\u00farate de seguir las normas de sintaxis de YAML.","title":"\u00bfC\u00f3mo puedo personalizar estas acciones?"},{"location":"manual_de_usuario/#donde-puedo-ver-la-documentacion-generada","text":"La documentaci\u00f3n generada se encuentra en la carpeta site/ , que puede ser desplegada en GitHub Pages o cualquier servidor est\u00e1tico. \u00a1Gracias por usar estas acciones automatizadas! Si necesitas m\u00e1s ayuda, no dudes en consultar con el equipo o revisar la configuraci\u00f3n de los workflows.","title":"\u00bfD\u00f3nde puedo ver la documentaci\u00f3n generada?"}]}